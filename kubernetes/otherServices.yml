---
apiVersion: v1
kind: Namespace
metadata:
  name: my-project
---
# Persistent Volume Claims for Postgres and MinIO
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-postgres-pvc
  namespace: my-project
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chat-history-postgres-pvc
  namespace: my-project
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-pvc
  namespace: my-project
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Deployments and Services
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-postgres
  namespace: my-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-postgres
  template:
    metadata:
      labels:
        app: api-postgres
    spec:
      containers:
        - name: api-postgres
          image: postgres:latest
          env:
            - name: POSTGRES_DB
              value: TicTacToe
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: P@ssw0rd
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: api-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: api-postgres
  namespace: my-project
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: api-postgres
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-history-postgres
  namespace: my-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-history-postgres
  template:
    metadata:
      labels:
        app: chat-history-postgres
    spec:
      containers:
        - name: chat-history-postgres
          image: postgres:latest
          env:
            - name: POSTGRES_DB
              value: SupportChat
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: P@ssw0rd
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: chat-data
      volumes:
        - name: chat-data
          persistentVolumeClaim:
            claimName: chat-history-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: chat-history-postgres
  namespace: my-project
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: chat-history-postgres
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: my-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: big
            - name: RABBITMQ_DEFAULT_PASS
              value: P@ssw0rd
          ports:
            - containerPort: 5672
            - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: my-project
spec:
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
  selector:
    app: rabbitmq
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: my-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio
          env:
            - name: MINIO_ROOT_USER
              value: asd
            - name: MINIO_ROOT_PASSWORD
              value: qweASD123
          args:
            - "server"
            - "/data"
            - "--console-address"
            - ":9001"
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - mountPath: /data
              name: minio-storage
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: my-project
spec:
  ports:
    - name: api
      port: 9000
      targetPort: 9000
    - name: console
      port: 9001
      targetPort: 9001
  selector:
    app: minio
  type: ClusterIP
